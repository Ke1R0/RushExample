{"version":3,"file":"47.js","mappings":"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","sources":["webpack://@infinity/root/./src/redux/actions/user.js","webpack://@infinity/root/./src/components/Login/styles.js","webpack://@infinity/root/./src/components/Login/index.jsx","webpack://@infinity/root/./src/components/Header/styles.js","webpack://@infinity/root/./src/components/Header/index.jsx","webpack://@infinity/root/./src/components/Navbar/styles.js","webpack://@infinity/root/./src/components/Navbar/index.jsx","webpack://@infinity/root/./src/redux/reducers/user.js","webpack://@infinity/root/./src/redux/createStore.js","webpack://@infinity/root/./src/styles.js","webpack://@infinity/root/./src/components/HomePage/styles.js","webpack://@infinity/root/./src/components/HomePage/index.jsx","webpack://@infinity/root/../delivery/dist/index.js","webpack://@infinity/root/../delivery/dist/App.js","webpack://@infinity/root/./src/routes.jsx","webpack://@infinity/root/./src/App.jsx","webpack://@infinity/root/./src/bootstrap.jsx"],"sourcesContent":["export const setUserName = (name) => ({\r\n    type: 'SET_USER_NAME',\r\n    name,\r\n});\r\n\r\nexport const setUserIsConnected = (isConnected) => ({\r\n    type: 'SET_USER_IS_CONNECTED',\r\n    isConnected,\r\n});\r\n","import styled from 'styled-components';\r\n\r\nexport const SLabel = styled.span`\r\n  color: #fff;\r\n  margin-right: 1rem;\r\n  font-size: 20px;\r\n`;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setUserIsConnected } from '../../redux/actions/user';\r\nimport { SLabel } from './styles';\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state?.user);\r\n\r\n  return (\r\n    <>\r\n      {!user?.isConnected && (\r\n        <button\r\n          type='button'\r\n          onClick={() => dispatch(setUserIsConnected(true))}\r\n        >\r\n          Login\r\n        </button>\r\n      )}\r\n      {user?.isConnected && (\r\n        <>\r\n          <SLabel>{user?.name}</SLabel>\r\n          <button\r\n            type='button'\r\n            onClick={() => dispatch(setUserIsConnected(false))}\r\n          >\r\n            Sign out\r\n          </button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import styled from 'styled-components';\r\n\r\nexport const SWrapper = styled.div`\r\n  height: 70px;\r\n  background-color: #0242d9;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 25px;\r\n  margin: 0;\r\n  font-size: 2rem;\r\n  font-family: 'Open Sans',Helvetica,Arial,Lucida,sans-serif;\r\n  box-shadow: 0 5px 7px -3px rgba(0,0,0,0.2);\r\n`;\r\n\r\nexport const SRightWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SLabel = styled.span`\r\n  color: #fff;\r\n  margin-right: 1rem;\r\n`;\r\n","import React from 'react';\r\nimport Login from '../Login';\r\nimport { SWrapper, SRightWrapper, SLabel } from './styles';\r\n\r\nconst Header = ({ sitename }) => (\r\n  <SWrapper>\r\n    <div>\r\n      <SLabel>{sitename}</SLabel>\r\n    </div>\r\n    <SRightWrapper>\r\n      <Login />\r\n    </SRightWrapper>\r\n  </SWrapper>\r\n);\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const SWrapper = styled.div`\r\n  height: 50px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  font-family: 'Open Sans',Helvetica,Arial,Lucida,sans-serif;\r\n  padding: 0 25px;\r\n  margin-top: 7px;\r\n\r\n`;\r\n\r\nexport const SLink = styled(NavLink)`\r\n  text-decoration: none;\r\n  padding: 0 10px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  &:visited {\r\n    color: #000;\r\n  }\r\n  &:hover {\r\n    background-color: #f6f6f6;\r\n  }\r\n  &.is-active{\r\n    transition: background-color .3s ease;\r\n    background-color: #efefef;\r\n   }\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { SLink, SWrapper } from './styles';\r\n\r\nconst Navbar = () => {\r\n  const user = useSelector((state) => state?.user);\r\n  return (\r\n    <SWrapper>\r\n      <SLink exact={true} activeClassName='is-active' to='/'>\r\n        Home\r\n      </SLink>\r\n      <SLink activeClassName='is-active' to='/orders/' replace>\r\n        Orders\r\n      </SLink>\r\n      {user?.isConnected && (\r\n        <>\r\n          <SLink activeClassName='is-active' to='/delivery/'>\r\n            Delivery\r\n          </SLink>\r\n        </>\r\n      )}\r\n    </SWrapper>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const initialState = {\r\n    name: 'App User',\r\n    isConnected: false,\r\n};\r\n\r\nexport const userReducer = (state = initialState, { type, ...payload }) => {\r\n    switch (type) {\r\n        case 'SET_USER_NAME':\r\n            return {\r\n                ...state,\r\n                name: payload.name,\r\n            };\r\n        case 'SET_USER_IS_CONNECTED':\r\n            return {\r\n                ...state,\r\n                isConnected: payload.isConnected,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStore, combineReducers, compose } from 'redux'\r\nimport { userReducer } from './reducers/user'\r\n\r\n// Define the Reducers that will always be present in the application\r\nconst staticReducers = {\r\n  user: userReducer,\r\n}\r\n\r\n// Configure the store\r\nexport default function configureStore() {\r\n  const composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n      : compose;\r\n\r\n  const enhancer = composeEnhancers();\r\n  const store = createStore(createReducer(), enhancer);\r\n\r\n  // Add a dictionary to keep track of the registered async reducers\r\n  store.asyncReducers = {}\r\n\r\n  // Create an inject reducer function\r\n  // This function adds the async reducer, and creates a new combined reducer\r\n  store.injectReducer = (key, asyncReducer) => {\r\n    store.asyncReducers[key] = asyncReducer\r\n    store.replaceReducer(createReducer(store.asyncReducers))\r\n  }\r\n\r\n  // Return the modified store\r\n  return store\r\n}\r\n\r\nfunction createReducer(asyncReducers) {\r\n  return combineReducers({\r\n    ...staticReducers,\r\n    ...asyncReducers\r\n  })\r\n}","import styled from 'styled-components';\r\nimport { createGlobalStyle } from 'styled-components'\r\n\r\nexport const SWrapper = styled.main`\r\n  margin: 0;\r\n  padding: 25px;\r\n  background-color: #efefef;\r\n  font-family: 'Open Sans',Helvetica,Arial,Lucida,sans-serif;\r\n`;\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n  }\r\n`","import styled from 'styled-components';\r\n\r\nexport const SContent = styled.div`\r\n    a {\r\n      color: #da194e;\r\n    }\r\n    \r\n    i{\r\n      color: #666;\r\n    }\r\n`;\r\n","import React, { useMemo, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {SContent} from './styles';\r\n\r\n\r\nconst HomePage = () => {\r\n    const dispatch = useDispatch();\r\n    const inputRef = useRef();\r\n    const user = useSelector((state) => state?.user);\r\n    const setUserName = useMemo(() => () => {\r\n        dispatch({\r\n            type: 'SET_USER_NAME',\r\n            name: inputRef.current.value\r\n        });\r\n    }, [])\r\n    return (\r\n        <SContent>\r\n            <h1>Root App Home Page</h1>\r\n            <h2>Logged in user: {user?.name}</h2>\r\n            <input type=\"text\" ref={inputRef} />\r\n            <button onClick={setUserName}>Set User</button>\r\n        </SContent>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import { App } from './App';\nexport default App;","import React, { Fragment } from 'react';\nexport const App = ({\n  storeName\n}) => /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(\"h1\", null, storeName, \": The new Delivery App\"), /*#__PURE__*/React.createElement(\"p\", null, \"The very first store.\"));","import React, { Fragment } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport HomePage from './components/HomePage';\r\nimport DeliveryApp from '@infinity/delivery';\r\n\r\nconst Orders = React.lazy(() => import('orders/App'));\r\nexport const Routes = ({ store }) => {\r\n  const user = useSelector((state) => state?.user);\r\n  return (\r\n    <Fragment>\r\n      <Route exact path='/'>\r\n        <HomePage />\r\n      </Route>\r\n      <Route path='/orders/'>\r\n        <Orders store={store} />\r\n      </Route>\r\n      {user?.isConnected && (\r\n          <Route path='/delivery/'>\r\n            <DeliveryApp storeName=\"General Store.\" />\r\n          </Route>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {BrowserRouter, Switch} from \"react-router-dom\";\r\nimport {Provider } from 'react-redux';\r\n\r\nimport Header from \"./components/Header\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nimport createStore from './redux/createStore';\r\nimport {GlobalStyle, SWrapper} from './styles';\r\nimport { Routes } from './routes';\r\n\r\nconst store = createStore({});\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <GlobalStyle />\r\n            <BrowserRouter>\r\n                <Header sitename=\"Infinity\"/>\r\n                <Navbar />\r\n                <SWrapper>\r\n                    <React.Suspense fallback={\"Loading\"}>\r\n                        <Switch>\r\n                            <Routes store={store} />\r\n                        </Switch>\r\n                    </React.Suspense>\r\n                </SWrapper>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"names":["setUserIsConnected","isConnected","type","SLabel","styled","dispatch","useDispatch","user","useSelector","state","onClick","name","SWrapper","SRightWrapper","sitename","SLink","NavLink","exact","activeClassName","to","replace","initialState","staticReducers","payload","createReducer","asyncReducers","combineReducers","GlobalStyle","createGlobalStyle","SContent","inputRef","useRef","setUserName","useMemo","current","value","ref","storeName","React","Fragment","Orders","Routes","store","path","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","injectReducer","key","asyncReducer","replaceReducer","fallback","ReactDOM","document","getElementById"],"sourceRoot":""}