{"version":3,"file":"759.js","mappings":"4NAOA,MAAMA,EAAM,KACR,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,UACXC,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,GAAOF,OACrCG,GAAcC,EAAAA,EAAAA,UAAQ,IAAM,KAC9BR,EAAS,CACLS,KAAM,gBACNC,KAAMR,EAASS,QAAQC,UAE5B,IACH,OACI,kBAAC,KAAD,KACI,0CAEIR,GAAMS,YACF,kBAAC,EAAAC,SAAD,KACI,+CAAqBV,GAAMM,MAC3B,2BAAOD,KAAK,OAAOM,IAAKb,IACxB,4BAAQc,QAAST,GAAjB,kBAEHU,EAET,kBAAC,KAAD,KACI,kBAAC,IAAD,MACA,kBAAC,KAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,eACd,iDAEJ,kBAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,iBACd,mDAEJ,kBAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,aACd,gDAGJ,kBAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,KACd,kBAAC,KAAD,CAAUC,GAAG,sBAiBzC,EARqB,EAAGC,MAAAA,KAElB,kBAAC,KAAD,CAAUA,MAAOA,IAASC,EAAAA,EAAAA,KAAY,UACpC,kBAACvB,EAAD,Q,8DCrDR,MAQA,EARe,EAAEwB,cAAAA,KACb,kBAAC,IAAD,CAAUP,QAASO,GACf,kBAAC,IAAD,CAAOL,OAAO,EAAMM,gBAAgB,YAAYJ,GAAG,eAAnD,aACA,kBAAC,IAAD,CAAOI,gBAAgB,YAAYJ,GAAG,iBAAtC,eACA,kBAAC,IAAD,CAAOI,gBAAgB,YAAYJ,GAAG,aAAtC,a,6DCJD,MAAMK,EAAWC,EAAAA,GAAAA,GAAW;;;;;EAOtBC,GAAQD,EAAAA,EAAAA,IAAOE,EAAAA,GAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mECPhBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAM;;;;;;;;;;;;;EAA3B,MAeMJ,EAAWC,EAAAA,GAAAA,IAAY;;;EAKvBI,EAAWJ,EAAAA,GAAAA,GAAW","sources":["webpack://@infinity/orders/./src/App.jsx","webpack://@infinity/orders/./src/components/Navbar/index.jsx","webpack://@infinity/orders/./src/components/Navbar/styles.js","webpack://@infinity/orders/./src/styles.js"],"sourcesContent":["import React, { Fragment, useMemo, useRef } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Provider, useSelector, useDispatch } from 'react-redux';\r\nimport { createStore } from 'redux'\r\nimport Navbar from './components/Navbar';\r\nimport { SWrapper, SContent } from './styles';\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n    const inputRef = useRef();\r\n    const user = useSelector((state) => state?.user);\r\n    const setUserName = useMemo(() => () => {\r\n        dispatch({\r\n            type: 'SET_USER_NAME',\r\n            name: inputRef.current.value\r\n        });\r\n    }, [])\r\n    return (\r\n        <Router>\r\n            <h1>Orders App</h1>\r\n            {\r\n                user?.isConnected ? (\r\n                    <Fragment>\r\n                        <h2>Logged in user: {user?.name}</h2>\r\n                        <input type=\"text\" ref={inputRef} />\r\n                        <button onClick={setUserName}>Set User</button>\r\n                    </Fragment>\r\n                 ) : undefined\r\n            }\r\n            <SWrapper>\r\n                <Navbar/>\r\n                <SContent>\r\n                    <Switch>\r\n                        <Route exact path='/delivered/'>\r\n                            <h2>Delivered Orders</h2>\r\n                        </Route>\r\n                        <Route exact path='/undelivered/'>\r\n                            <h2>Undelivered Orders</h2>\r\n                        </Route>\r\n                        <Route exact path='/returns/'>\r\n                            <h2>Returned Orders</h2>\r\n                        </Route>\r\n                        {/* This route is used if app is started without main app*/}\r\n                        <Route exact path='/'>\r\n                            <Redirect to=\"/delivered/\"/>\r\n                        </Route>\r\n                    </Switch>\r\n                </SContent>\r\n            </SWrapper>\r\n        </Router>\r\n    );\r\n};\r\n\r\nconst AppBootstrap = ({ store }) => {\r\n    return (\r\n      <Provider store={store || createStore(() => undefined)}>\r\n        <App />\r\n      </Provider>\r\n    );\r\n};\r\n\r\nexport default AppBootstrap;\r\n","import React from 'react';\r\nimport {SLink, SWrapper} from './styles';\r\n\r\nconst Navbar = ({increaseCount}) => (\r\n    <SWrapper onClick={increaseCount}>\r\n        <SLink exact={true} activeClassName='is-active' to='/delivered/'>Delivered</SLink>\r\n        <SLink activeClassName='is-active' to='/undelivered/'>Undelivered</SLink>\r\n        <SLink activeClassName='is-active' to='/returns/'>Returns</SLink>\r\n    </SWrapper>\r\n);\r\n\r\nexport default Navbar;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const SWrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ccc;\r\n`;\r\n\r\nexport const SLink = styled(NavLink)`\r\n  text-decoration: none;\r\n  margin: 5px 15px 3px;\r\n  padding: 5px 15px;\r\n  color: #da194e;\r\n  transition: opacity 0.3s ease;\r\n  position: relative;\r\n  \r\n  &:after {\r\n    content: \"\";\r\n    height: 3px;\r\n    width: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    background-color: #da194e;\r\n    transform: scaleX(0);\r\n    transform-origin: right;\r\n    transition: transform 0.3s ease;\r\n  }\r\n  \r\n  &.is-active{\r\n   transition: background-color .3s ease;\r\n   background-color: #da194e;\r\n   color: #fff;\r\n  }\r\n\r\n  &:hover{\r\n    &:after {\r\n      transform: scaleX(1);\r\n      transform-origin: left;\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SLink = styled(Link)`\r\n  text-decoration: none;\r\n  padding-right: 10px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  \r\n  &:visited {\r\n    color: #000;\r\n  }\r\n  \r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nexport const SWrapper = styled.main`\r\n  padding: 25px;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport const SContent = styled.div`\r\n  padding: 10px 15px;\r\n  background-color: #fff;\r\n`;\r\n"],"names":["App","dispatch","useDispatch","inputRef","useRef","user","useSelector","state","setUserName","useMemo","type","name","current","value","isConnected","Fragment","ref","onClick","undefined","exact","path","to","store","createStore","increaseCount","activeClassName","SWrapper","styled","SLink","NavLink","Link","SContent"],"sourceRoot":""}